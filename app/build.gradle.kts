/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.1")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:31.1-jre")
}

application {
    // Define the main class for the application.
    mainClass.set("echo.server.App")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// tasks {
//     "copy"(Copy::class) {
//         from("src/main/kotlin/io/jivimberg/githook/pre-push.kts") {
//             rename { it.removeSuffix(".kts") }
//         }
//         into(".git/hooks")
//     }

//     "build" {
//         dependsOn("copy")
//     }
// }
//
// task("installLocalGitHook", Copy::class) {
//     from(File(rootProject.rootDir, "scripts/pre-push"))
//     into(File(rootProject.rootDir, ".git/hooks"))
//     fileMode = 0775
// }

// tasks.getByName("build").dependsOn("installLocalGitHook")

// Rian copies/creates a scripts directoy in repo
// add gradle task in build.gradle 
// push to main

// Claire pulls main
// gradle build OR some sort specific gradle task in terminal
//  it would copy into claire's .git directory

// build.dependsOn installLocalGitHook
